{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAS,CACbC,QAAS,KACTC,cAAc,GAsBhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,SACzCA,MAIPR,EAAKgB,iBAAiB,UA/BLC,IACfA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASpB,GACxBqB,EAAaC,OAAOC,YAAYJ,EAASK,YACzChB,MAAEA,EAAKiB,KAAEA,EAAIC,OAAEA,GAAWL,EAChCrB,EAAK2B,QACL,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOH,GAASE,IAAK,CAEvCtB,EAAcsB,EAAI,EADGC,OAAOrB,GAASqB,OAAOJ,GAAQG,GAEjDE,MAAKC,IACJC,EAAAlC,GAASmC,OAAOC,QAAQH,EAAQ5B,MAEjCgC,OAAMC,IACLJ,EAAAlC,GAASmC,OAAOI,QAAQD,EAAOjC,MAGrCmC,QAAQC,IAAIlB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nconst optios = {\n  timeout: 3500,\n  clickToClose: true,\n};\n\nconst onSubmit = e => {\n  e.preventDefault();\n  const formData = new FormData(form);\n  const formValues = Object.fromEntries(formData.entries());\n  const { delay, step, amount } = formValues;\n  form.reset();\n  for (let i = 0; i < Number(amount); i++) {\n    const updatedDelay = Number(delay) + Number(step) * i;\n    createPromise(i + 1, updatedDelay)\n      .then(result => {\n        Notiflix.Notify.success(result, optios);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error, optios);\n      });\n  }\n  console.log(formValues);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$optios","timeout","clickToClose","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","formData","FormData","formValues","Object","fromEntries","entries","step","amount","reset","i","Number","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","console","log"],"version":3,"file":"03-promises.2ce85244.js.map"}